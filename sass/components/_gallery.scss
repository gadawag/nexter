.gallery {
    background-color: $color_light;
    
    //i removed this because i'm using flexbox. i think this is for a parent which is using grid. 
    //grid-column: full-start / full-end;

    display: grid;
    /*grid-template-columns: repeat(8, 1fr);
    grid-template-rows: repeat(7, 5vw);*/
    grid-template: repeat(7, 5vw) / repeat(8, 1fr); //i used vw here because the responsive depends on the width, not on height.
    // fr means fraction, if we used percentage + grid-gap we will have a total of > 100%. the fraction will solve this problem by dividing each column to equal ratio.


    grid-gap: 1.5rem;
    padding: 1.5rem;

    @include responsive(phone-tab){ // width < 800?
        grid-gap: 6px;
        padding: 6px;
    }

    @include responsive(phone){ // width < 600?
        grid-gap: 3px;
        padding: 3px;
    }

    &__item {
        &--1 {
            grid-row: 1 / span 2; // start from row 1 span to next row (PATAYO).
            grid-column: 1 / span 2; // start from column 1 span to next column (PAHABA).
        }

        &--2 {
            grid-row: 1 / span 3; // start from row 1 span two rows (PATAYO).
            grid-column: 3 / span 3; // start from column 3 span two columns (PAHABA).
        }

        &--3 {
            grid-row: 1 / span 2; // start from row 1 span to next row (PATAYO).
            grid-column: 6 / span 1; // start from column 6 span to itself (PAHABA).
        }

        &--4 {
            grid-row: 1 / span 2;
            grid-column: 7 / span 2;
        }

        &--5 {
            grid-row: 3 / span 3;
            grid-column: 1 / span 2;
        }

        &--6 {
            grid-row: 4 / span 2;
            grid-column: 3 / span 2;
        }

        &--7 {
            grid-row: 4 / span 1;
            grid-column: 5 / span 1;
        }

        &--8 {
            grid-row: 3 / span 2;
            grid-column: 6 / span 2;
        }

        &--9 {
            grid-row: 3 / span 3;
            grid-column: 8 / span 1;
        }

        &--10 {
            grid-row: 6 / span 2;
            grid-column: 1 / span 1;
        }

        &--11 {
            grid-row: 6 / span 2;
            grid-column: 2 / span 2;
        }

        &--12 {
            grid-row: 6 / span 2;
            grid-column: 4 / span 1;
        }

        &--13 {
            grid-row: 5 / span 3;
            grid-column: 5 / span 3;
        }

        &--14 {
            grid-row: 6 / span 2;
            grid-column: 8 / span 1;
        }
    }

    &__img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
    }
}